pipeline {
  agent any  // Disable global agent since we use per-stage agents

  environment {
    DOCKER_IMAGE = "manivannan238/ultimate-cicd:${BUILD_NUMBER}"
    SONAR_URL = "http://54.255.136.137:9000"
  }

  stages {
    stage('Checkout') {
      agent any
      steps {
        echo 'passed'
        // git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Static Code Analysis') {
      agent {
        docker {
          image 'maven:3.9.6-eclipse-temurin-17'
          args '--user root'
        }
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh """
              echo "Using Java version:"
              java -version
              mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL
            """
          }
        }
      }
    }

    stage('Maven Build') {
      agent {
        docker {
          image 'maven:3.9.6-eclipse-temurin-17'
          args '--user root'
        }
      }
      steps {
        dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package -DskipTests'
        }
      }
    }

    stage('Build and Push Docker Image') {
      agent any
      steps {
        script {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            echo "Building Docker Image: ${DOCKER_IMAGE}"
            docker build -t ${DOCKER_IMAGE} .
          '''

          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "jenkins_v3"
        GIT_USER_NAME = "manivannanpannerselvam"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "manipinnai238@gmail.com"
            git config user.name "manivannanpannerselvam"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}






// pipeline {
//   agent {
//     docker {
//       image 'maven:3.9.6-eclipse-temurin-17'
//       args '--user root'
//     }
//   }
//   stages {
//     stage('Checkout') {
//       steps {
//         sh 'echo passed'
//         //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
//       }
//     }
//     stage('Static Code Analysis') {
//     environment {
//          SONAR_URL = "http://54.254.197.221:9000"
//         }
//         steps {
//              withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
//                  dir('java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
//                  sh """
//           echo "Using Java version:"
//           java -version
//           mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL
//         """
//       }
//     }
//   }
// }
//
//     stage('Build and Push Docker Image') {
//       environment {
//         DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
//         REGISTRY_CREDENTIALS = credentials('docker-cred')
//       }
//       steps {
//         script {
//           // Ensure correct path and variable resolution
//           sh '''
//             cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
//             echo "Building Docker Image: ${DOCKER_IMAGE}"
//             /usr/bin/docker build -t ${DOCKER_IMAGE} .
//           '''
//
//           def dockerImage = docker.image("${DOCKER_IMAGE}")
//           docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
//             dockerImage.push()
//           }
//         }
//       }
//     }
//     stage('Update Deployment File') {
//         environment {
//             GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
//             GIT_USER_NAME = "iam-veeramalla"
//         }
//         steps {
//             withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
//                 sh '''
//                     git config user.email "abhishek.xyz@gmail.com"
//                     git config user.name "Abhishek Veeramalla"
//                     BUILD_NUMBER=${BUILD_NUMBER}
//                     sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
//                     git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
//                     git commit -m "Update deployment image to version ${BUILD_NUMBER}"
//                     git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
//                 '''
//             }
//         }
//     }
//   }
// }
